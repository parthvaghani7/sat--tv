{"version":3,"sources":["components/option1.js","components/option2.js","components/option3.js","components/option4.js","components/option5.js","components/option6.js","components/option7.js","components/option8.js","components/modal.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["Option1","state","balance","this","getCurrentBalance","token","localStorage","getItem","fetch","method","headers","then","response","json","data","setState","catch","err","console","log","React","Component","Option2","handleChange","e","target","name","value","amount","onSubmit","bind","match","alert","body","JSON","stringify","parseInt","notification","open","message","props","onCancel","className","onChange","placeholder","style","marginTop","type","onClick","subscriptions","getAvailableSubscriptions","title","itemLayout","dataSource","renderItem","item","Item","Meta","PackName","description","Price","Channels","join","ChannelName","ServiceName","Option4","pack","months","packName","error","Group","buttonStyle","Button","min","Option","Select","Option5","channels","length","mode","width","key","Option6","serviceName","Option7","subscription","getCurrentSubscription","activeSubscription","activeServices","Option8","enter","email","phone","getUser","obj","setItem","OptionModal","modal1Visible","titles","option","centered","footer","visible","onOk","setModal1Visible","maskClosable","Home","changeOption","openModal","logout","removeItem","window","location","reload","alignContent","Text","code","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82832356.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Option1 extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      balance: 0,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentBalance();\r\n  } \r\n\r\n  getCurrentBalance() {\r\n    const token = localStorage.getItem('token')\r\n    fetch('http://localhost:5000/api/balance', {\r\n      method: 'GET',\r\n      headers: {\r\n        'pragma': 'no-cache',\r\n        'cache-control': 'no-cache',\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ balance: data.balance});\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Your Current Balance is {this.state.balance}.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option1;","import { Input, Button, notification } from 'antd';\r\nimport React from 'react';\r\n\r\nclass Option2 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      amount: 0,\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    const { amount } = this.state;\r\n    const token = localStorage.getItem('token');\r\n    const regex = /^[0-9]+$/;\r\n\r\n    if (!amount.match(regex) || amount <= 0) {\r\n      return alert('enter valid amount');\r\n    }\r\n    fetch('http://localhost:5000/api/recharge', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ amount: parseInt(amount) })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        notification.open({\r\n          message: 'Recharge successful.'\r\n        });\r\n        this.props.onCancel();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Input onChange={this.handleChange} name='amount' placeholder=\"Enter Amount\" />\r\n        <Button style={{ marginTop: '10px' }} type=\"primary\" onClick={this.onSubmit}>Recharge</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option2;","import { List, Card } from 'antd';\r\nimport React from 'react';\r\n\r\nclass Option2 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      subscriptions: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAvailableSubscriptions();\r\n  }\r\n\r\n  getAvailableSubscriptions() {\r\n    const token = localStorage.getItem('token')\r\n    fetch('http://localhost:5000/api/subscriptions', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ subscriptions: data.subscriptions });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"Available packs for subscription\">\r\n\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={this.state.subscriptions && this.state.subscriptions['Packs']}\r\n            renderItem={item => (\r\n              <List.Item.Meta\r\n                title={item.PackName}\r\n                description={<p>Price: {item.Price} Rs. Channels: {item.Channels.join(', ')}</p>}\r\n              />\r\n            )}\r\n          />\r\n        </Card>\r\n\r\n        <Card className=\"marginTop\" title=\"Available channels for subscription\">\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={this.state.subscriptions && this.state.subscriptions['Channels']}\r\n            renderItem={item => (\r\n              <List.Item.Meta\r\n                title={item.ChannelName}\r\n                description={\r\n                  <p>Price:{item.Price}</p>\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Card>\r\n\r\n        <Card className=\"marginTop\" title=\"Available packs for subscription\">\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={this.state.subscriptions && this.state.subscriptions['Services']}\r\n            renderItem={item => (\r\n              <List.Item.Meta\r\n                title={item.ServiceName}\r\n                description={<p>Price: {item.Price}</p>}\r\n              />\r\n            )}\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option2;","import { Radio, InputNumber, Button, notification } from 'antd';\r\nimport React from 'react';\r\n\r\nclass Option4 extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      pack: '',\r\n      months:1\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit() {\r\n    const { pack, months } = this.state;\r\n    const token = localStorage.getItem('token');\r\n    if(!pack) {\r\n      return alert('please select one of the packs.')\r\n    }\r\n\r\n    fetch('http://localhost:5000/api/subscribePack', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ packName: pack, months })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let message;\r\n        if(data.error){\r\n          message = data.error;\r\n        } else {\r\n          message= 'Base pack subscribed.'\r\n        }\r\n        notification.open({\r\n          message\r\n        });\r\n        this.props.onCancel();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n        Select Pack:&nbsp;\r\n        <Radio.Group name=\"pack\" buttonStyle=\"solid\" onChange={this.handleChange}>\r\n          <Radio.Button value=\"Gold\">Gold</Radio.Button>\r\n          <Radio.Button value=\"Silver\">Silver</Radio.Button>\r\n        </Radio.Group>   \r\n        </div>     \r\n        <div className=\"marginTop\">\r\n        Select Months:&nbsp;\r\n        <InputNumber min={1} name='months' onChange={(e) => this.setState({months: e})} />\r\n        </div>\r\n        <Button className=\"marginTop\" type=\"primary\" onClick = {this.onSubmit}>Subscribe</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option4;","import { Select, Button, notification } from 'antd';\r\nimport React from 'react';\r\nconst { Option } = Select;\r\n\r\nclass Option5 extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      channels: [],\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit() {\r\n    const { channels } = this.state;\r\n    const token = localStorage.getItem('token');\r\n    if(!channels.length) {\r\n      return alert('please select one of the packs.')\r\n    }\r\n\r\n    fetch('http://localhost:5000/api/addChannels', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ channels })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let message;\r\n        if(data.error){\r\n          message = data.error;\r\n        } else {\r\n          message= 'Channel added. Email notification sent successfully.';\r\n        }\r\n        notification.open({\r\n          message\r\n        });\r\n        this.props.onCancel();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        channels: e\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Select\r\n          mode=\"multiple\"\r\n          placeholder=\"Please select\"\r\n          onChange={this.handleChange}\r\n          style={{ width: '100%' }}\r\n        >\r\n          <Option key=\"Discovery\">Discovery</Option>\r\n          <Option key=\"NatGeo\">NatGeo</Option>\r\n        </Select>\r\n        <Button className=\"marginTop\" type=\"primary\" onClick = {this.onSubmit}>Add Channels</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option5;","import { Radio, Button, notification } from 'antd';\r\nimport React from 'react';\r\n\r\nclass Option6 extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      serviceName: null,\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit() {\r\n    const { serviceName } = this.state;\r\n    const token = localStorage.getItem('token');\r\n    if(!serviceName) {\r\n      return alert('please select one of the packs.')\r\n    }\r\n\r\n    fetch('http://localhost:5000/api/subscribeService', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ serviceName })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let message;\r\n        if(data.error){\r\n          message = data.error;\r\n        } else {\r\n          message = 'Services added. Email notification sent successfully.';\r\n        }\r\n        notification.open({\r\n          message\r\n        });\r\n        this.props.onCancel();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n  })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Radio.Group name=\"serviceName\" buttonStyle=\"solid\" onChange={this.handleChange}>\r\n          <Radio.Button value=\"LearnEnglish\">LearnEnglish</Radio.Button>\r\n          <Radio.Button value=\"LearnCooking\">LearnCooking</Radio.Button>\r\n        </Radio.Group>        \r\n        <Button className=\"marginTop\" type=\"primary\" onClick = {this.onSubmit}>Add Services</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option6;","import React from 'react';\r\n\r\nclass Option7 extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      subscription: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentSubscription();\r\n  } \r\n\r\n  getCurrentSubscription() {\r\n    const token = localStorage.getItem('token')\r\n    fetch('http://localhost:5000/api/subscription', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ subscription: data});\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Active Subscription: {this.state.subscription.activeSubscription ? this.state.subscription.activeSubscription : `No Active Subscription`}  </p>\r\n        <p>Active Services: {this.state.subscription.activeServices ? this.state.subscription.activeServices : `No Active Services`}  </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option7;","import { Input, Button, notification } from 'antd';\r\nimport React from 'react';\r\n\r\nclass Option8 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      enter: false,\r\n      email: '',\r\n      phone: ''\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    const token = localStorage.getItem('token')\r\n    fetch('http://localhost:5000/api/user', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ email: data.email, phone: data.phone});\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSubmit() {\r\n    const token = localStorage.getItem('token');\r\n    const { email, phone } = this.state;\r\n    if (!email && !phone) {\r\n      alert('Both fields cannot be empty');\r\n    }\r\n    const obj= {};\r\n    if(email) {\r\n      obj.email = email;\r\n    }\r\n    if(phone) {\r\n      obj.phone = phone;\r\n    }\r\n    fetch('http://localhost:5000/api/user', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':`Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(obj)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        notification.open({\r\n          message: 'User updated.'\r\n        });\r\n        this.props.onCancel();\r\n        if(data.token) {\r\n          localStorage.setItem('token', data.token);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Input onChange={this.handleChange} name='email' placeholder=\"Enter Your Email\" value={this.state.email}/>\r\n        <Input className=\"marginTop\" onChange={this.handleChange} name='phone' placeholder=\"Enter Your Phone Number\" value={this.state.phone} />\r\n        <Button className=\"marginTop\" type=\"primary\" onClick={this.onSubmit}>Update</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option8;","import { Modal } from 'antd';\r\nimport React from 'react';\r\nimport Option1 from './option1';\r\nimport Option2 from './option2';\r\nimport Option3 from './option3';\r\nimport Option4 from './option4';\r\nimport Option5 from './option5';\r\nimport Option6 from './option6';\r\nimport Option7 from './option7';\r\nimport Option8 from './option8';\r\n\r\n\r\nclass OptionModal extends React.Component {\r\n  state = {\r\n    modal1Visible: false,\r\n  };\r\n\r\n  titles = ['View Current Balance of the account', ' Recharge Account', 'View available packs, channels and services', 'Subscribe to base packs', 'Add channels to an existing subscription', 'Subscribe to special services', 'View current subscription details', 'Update email and phone number for notifications']\r\n\r\n  setModal1Visible(modal1Visible) {\r\n    if(!modal1Visible){\r\n      this.props.onCancel();\r\n      this.setState({ modal1Visible: false });\r\n    } else {\r\n      this.setState({ modal1Visible: true });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ modal1Visible: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title= {this.titles[this.props.option - 1]}\r\n          centered\r\n          footer={null}\r\n          visible={this.state.modal1Visible}\r\n          onOk={() => this.setModal1Visible(false)}\r\n          onCancel={() => this.setModal1Visible(false)}\r\n          maskClosable= {false}\r\n        >\r\n          {this.props.option === 1 &&\r\n          <Option1></Option1>\r\n          }\r\n          {this.props.option === 2 &&\r\n          <Option2 onCancel={this.props.onCancel}></Option2>\r\n          }\r\n          {this.props.option === 3 &&\r\n          <Option3></Option3>\r\n          }\r\n          {this.props.option === 4 &&\r\n          <Option4 onCancel={this.props.onCancel}></Option4>\r\n          }\r\n          {this.props.option === 5 &&\r\n          <Option5 onCancel={this.props.onCancel}></Option5>\r\n          }\r\n          {this.props.option === 6 &&\r\n          <Option6 onCancel={this.props.onCancel}></Option6>\r\n          }\r\n          {this.props.option === 7 &&\r\n          <Option7></Option7>\r\n          }\r\n          {this.props.option === 8 &&\r\n          <Option8 onCancel={this.props.onCancel}></Option8>\r\n          }\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionModal;\r\n\r\n// ReactDOM.render(<OptionModal />, mountNode);","import React from 'react';\r\nimport '../App.css';\r\nimport OptionModal from './modal';\r\nimport { List, Typography, notification } from 'antd';\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openModal: false,\r\n      option: ''\r\n    };\r\n    this.changeOption = this.changeOption.bind(this);\r\n    this.onCancel = this.onCancel.bind(this);\r\n  }\r\n\r\n  changeOption = (option) => {\r\n    this.setState({\r\n      openModal: true,\r\n      option\r\n    });\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.setState({\r\n      openModal: false\r\n    });\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('token');\r\n    notification.open({\r\n      message: 'Logged out Successfully.'\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n          <div>Welcome to SatTV</div>\r\n        <div style={{alignContent:\"left\"}}>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(1)}>1. View Current Balance of the account</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(2)}>2. Recharge Account</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(3)}>3. View available packs, channels and services</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(4)}>4. Subscribe to base packs</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(5)}>5. Add channels to an existing subscription</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(6)}>6. Subscribe to special services</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(7)}>7. View current subscription details</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => this.changeOption(8)}>8. Update email and phone number for notifications</Typography.Text>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Typography.Text code onClick={() => { this.logout() }}>9. Exit</Typography.Text>\r\n          </List.Item>\r\n          {this.state.openModal &&\r\n            <OptionModal option={this.state.option} onCancel={this.onCancel}></OptionModal>\r\n          }\r\n        </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from './components/home';\nimport { Input, Button, notification } from 'antd';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = { \n      enter: false,\n      email:'',\n      phone:''\n    }\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token')\n    if(token) {\n      this.setState({\n        enter: true\n      })\n    }\n  }\n\n  onSubmit() {\n    const {email, phone} = this.state;\n    if(!email) {\n      return alert('email required');\n    }\n    fetch('http://localhost:5000/api/enter', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, phone})\n    })\n      .then(response => response.json())\n      .then(data => {\n        notification.open({\n          message: 'Login successful.'\n        });\n        this.setState({ enter: true});\n        localStorage.setItem('token', data.token);\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n          {!this.state.enter ? <div><div>Welcome to SatTV</div>\n          <Input onChange={this.handleChange} name='email' placeholder=\"Enter Your Email\" />\n          <Input onChange={this.handleChange} name='phone' placeholder=\"Enter Your Phone Number\" />\n          <Button type=\"primary\" onClick = {this.onSubmit}>Enter</Button></div> : <Home></Home>}\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}